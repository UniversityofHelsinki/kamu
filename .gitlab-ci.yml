image: python:3.10

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V
  - source venv/bin/activate
  - pip --require-virtualenv list

stages:
  - init
  - lint
  - test
  - sonarqube-check

prepare:
  stage: init
  before_script:
  - python -V
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip --require-virtualenv install -r requirements_dev.txt
  script:
  - pip --require-virtualenv list

test:
  script:
    - coverage run ./manage.py test --parallel
    - coverage xml
  artifacts:
    expire_in: 2 days
    paths:
      - coverage.xml

migrations-check:
  stage: test
  script:
    - ./manage.py makemigrations --no-input --check -v0 ||
      ( RET=$?; echo "makemigrations failed with code $?, dry-run follows:" 1>&2;
        ./manage.py makemigrations --no-input --dry-run; exit $RET )

black:
  stage: lint
  script:
    - black . --check

isort:
  stage: lint
  script:
    - isort . --check

mypy:
  stage: lint
  script:
    - mypy .

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  before_script:
    - ''
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.host.url=${CI_SONAR_HOST} -Dsonar.login=${CI_SONAR_LOGIN}
  allow_failure: true
  needs:
    - job: test
      artifacts: true
